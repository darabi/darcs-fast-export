= darcs backend for fast data importers
Miklos Vajna <vmiklos-at-frugalware-dot-org>

== Status

Darcs version I tested:

----
$ darcs --version
2.1.0 (release)
----

Git version:

----
$ git --version
git version 1.6.0.2
----

Bzr versions:

----
$ bzr version
Bazaar (bzr) 1.7.1
$ ls /usr/lib/python*/site-packages/fastimport*
/usr/lib/python2.5/site-packages/fastimport-0.6.0final0-py2.5.egg-info
----

Hg version:

----
$ hg version
Mercurial Distributed SCM (version 1.0.2)
----

== Features

=== Fast

darcs-fast-export provides a fast darcs backend for fast-import.
Converting a huge repo (26094 patches, repo size 210M) took about 10
hours for me.

=== Independent

Ideally it should work with any fast importer, but actually I tested it
with git fast-import, bzr fast-import and hg fastimport. (AFAIK these
are the tree fast-import implementations available ATM.)

hg fastimport needs two patches, till they are not in upstream, you can
get my repo using

----
$ hg clone static-http://frugalware.org/~vmiklos/hg/hg-fastimport
----

=== Formats

It supports both the 'darcs-2' and the 'old-fashioned-inventory' darcs
repository formats.

=== Incremental conversions

It supports the usual `--export-marks` / `--import-marks` switches to
allow incremental conversion.

== Usage

Typical usage (given that `test/` is a darcs repo):

----
$ mkdir test.git
$ git --bare init
$ darcs-fast-export.py test |(cd test.git; git fast-import)
----

To verify the results:

----
$ git clone -q test.git test.git.nonbare
$ diff --exclude .git -Naur test.git.nonbare test/_darcs/pristine
$ rm -rf test.git.nonbare
----

If you get no output, then the conversion was successful.

For more examples (especially for bzr and hg ones) see the `t/`
directory.

== Download

Using git:

----
$ git clone git://vmiklos.hu/darcs-fast-export
----

== Alternatives

- http://repo.or.cz/w/darcs2git.git[darcs2git] tries to find conflict
  resolutions (to map them to merge commits), which is ideally an even
  better conversion than the official darcs1 -> darcs2 converter, but it's
  much slower because of this. It does not support the darcs2 format,
  either.

- http://progetti.arstecnica.it/tailor[tailor] is a nice any2any VCS
  converter, but the end result usually does not match the original repo
  because it tries to be too intelligent (it tracks renames and such which
  is completely unnecessary for git).

- http://github.com/freshtonic/undarcs/tree/master[undarcs] claims to be
  fast, but it produces incorrect result in case the repo contains
  conflicts.
